{% if is_ajax == false %}
  {% extends "basic/layout.html.twig" %}
  {% block title %}{% endblock %}
  {% block description %}{% endblock %}

  {% block before_content %}
    <div class="container">
      <div class="before-content row">
        <div class="col-md-12" style="padding-left: 0;">
          <div id="custom-search-input">
            <form action="/catalog" method="GET">
              <div class="input-group col-md-12">
                <input type="text" id="main_query" class="form-control input-lg" name="query" value="{{ query }}" placeholder="Search items.." />
                <span class="input-group-btn">
                  <button class="btn btn-info btn-lg" type="button">
                    <i class="glyphicon glyphicon-search"></i>
                  </button>
                </span>
              </div>
            </form>
          </div>
        </div>
        <div class="col-md-offset-2">
          {% include "basic/create-video.html.twig" %}
          <div class="clearfix"></div>
        </div>
      </div>
    </div>
  {% endblock %}

  {% block before_body_end %}
    {#<script type='text/javascript' src='https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.0/jquery-ui.min.js'></script>#}
    {% include "general/autocomplete.html.twig" ignore missing %}
    <script>
      var createVideoGrid = document.querySelector('#create-video ul');
      var items = document.querySelectorAll('#assets-to-choose .item');
      var advancedOptions = document.querySelector('#advanced');
      var createVideoAction = document.querySelector('#create-video-action');

      // Toggle advanced
      advancedOptions.addEventListener('click', function() {
        createVideoGrid.classList.toggle('show-config');
      });

      function onRemoveItem(event) {
        var itemHasBeenRemoved = false;
        var removingItem = event.currentTarget;

        Array.from(createVideoGrid.children).forEach(function(item) {
          if(item.querySelector('.content') === removingItem) {
            createVideoGrid.removeChild(removingItem.closest('li'));
            itemHasBeenRemoved = true;
          } else if (itemHasBeenRemoved) {
            // Update next items order
            var nextItemOrder = item.querySelector('.order');
            var currentIndex = nextItemOrder.innerHTML;
            nextItemOrder.innerHTML = parseInt(currentIndex) - 1;
          }
        });
      }

      function createEl (el) {
        return document.createElement(el);
      }

      // Create the main element with the specific data
      function createElementStructure (item) {
        var li = createEl('li');
        var img = createEl('img');
        var order = createEl('span');
        var orderNumber = createEl('span');
        var container = createEl('div');
        var removeItem = createEl('span');

        // Add data and content
        li.setAttribute('data-media-url', item.mediaURL);
        li.setAttribute('data-image', item.image);
        li.setAttribute('data-type', item.type);
        img.src = item.image;
        orderNumber.innerHTML = item.order;
        removeItem.innerHTML = 'x';

        // Add classes
        li.className = 'col-sm-3 col-md-3 col-xs-6';
        container.className = 'content';
        img.className = 'img-responsive';
        orderNumber.className = 'order';
        removeItem.className = 'remove-item';

        // Put elements together
        order.append(orderNumber, removeItem);
        container.append(img, order);
        li.append(container);

        container.addEventListener('click', onRemoveItem);

        return li;
      }

      // Create the configuration inputs for te element
      function createConfigElements () {
        var container = createEl('div');
        var duration = createEl('input');
        var text = createEl('input');
        var textDuration = createEl('input');

        // Add classes
        container.className = 'config';
        duration.className = 'duration';
        text.className = 'object-text';
        textDuration.className = 'text-duration';

        // Placeholders
        duration.placeholder = 'Duration';
        text.placeholder = 'Text';
        textDuration.placeholder = 'Text duration';

        container.append(duration, text, textDuration);

        return container;
      }

      Array.from(items).forEach(function(item) {
        item.querySelector('.item-thumb-container').addEventListener('click', function() {
          var data = {
            mediaURL: item.getAttribute('data-media-url'),
            image: item.getAttribute('data-image'),
            order: createVideoGrid.children.length + 1,
            type: item.getAttribute('data-type')
          };

          var element = createElementStructure(data);
          element.append(createConfigElements());

          // Inject to the list
          createVideoGrid.append(element);
        });
      });

      function extractItemData (item) {
        return {
          http: item.getAttribute('data-media-url'),
          type: item.getAttribute('data-type'),
          textDuration: item.querySelector('.text-duration').value,
          text: item.querySelector('.object-text').value,
          duration: item.querySelector('.duration').value
        };
      }
      createVideoAction.addEventListener('click', function() {
        var itemsData = [];

        // Get data from each video item
        Array.from(createVideoGrid.children).forEach(function(item) {
          itemsData.push(extractItemData(item));
        });

        if(itemsData.length) {
          fetch("/new-video", {
            method: "POST",
            headers: {
              'Accept': 'application/json, text/plain, */*',
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              name: document.querySelector('#create-video input.video-name').value,
              description: document.querySelector('#create-video input.video-description').value,
              items: itemsData
            })
          }).then(function() {
            window.location = window.location.origin + '/results'
          });
        }
      });
    </script>
  {% endblock %}
{% endif %}

{% block content %}
<div class="container">
  <div class="row">

    <div class="col-md-2" style="padding-left: 0;">
      {% for val in (aggregations | sortObject('position', 'desc')) %}
      <div class="">
        <h5 style="margin-bottom: 5px;"><strong style="color: #337ab7;">{{ aggregations[val.key].title }}</strong></h5>
        <ul class="browse-list list-unstyled long-list" style="margin-bottom: 0;">
          {% for term in aggregations[val.key].buckets %}
          <li ng-repeat="bucket in agg.buckets">
          <div class="checkbox block" style="margin-top: 0; margin-bottom: 0;">
            <label>
              <input class="checkbox" type="checkbox" {% if (filter and filter.val == term.key and filter.key == val.key) or in_array(term.key, filters[val.key]) %}checked="checked"{% endif %} onclick="onAggregationClick(this, '{{aggregations[val.key].name}}', '{{ term.key }}');">
              {{ term.key }} ({{ term.doc_count }})
            </label>
          </div>
          </li>
          {% endfor %}
        </ul>

        {% if aggregations[val.key].type == 'terms' %}
          <p class=""><a href="/category/{{ aggregations[val.key].name }}">See all</a></p>
        {% endif %}
        <div class="clearfix"></div>
      </div>
      {% endfor %}

    </div>
    <div class="col-md-10">

      {% if settings.popular_queries %}
      <ul class="subnav" style="">
        <li>Random: </li>
        {% for val in settings.popular_queries | split | shuffle | slice(0, 10) %}
          <li><a href="/catalog?query={{ val }}">{{ val }}</a></li>
        {% endfor %}
      </ul>
      {% endif %}


      <div class="breadcrumbs">
        {% for key, val in filters %}
        {% for term in val %}
        <span class="label label-default" style="margin-left: 5px;">{{ term }}
          <span onclick="removeFilter('{{ key }}', '{{ term }}');" style="cursor: pointer" class="glyphicon glyphicon-remove"></span>
        </span>
        {% endfor %}
        {% endfor %}

        {% if (query) %}
        <span class="label label-default" style="margin-left: 5px;">{{ query }}
        </span>
        {% endif %}

        {% if (filter) %}
        <span class="label label-default" style="margin-left: 5px;">{{ filter.val }}
          <span onclick="removeFilter('{{ filter.key }}', '{{ filter.val }}');" style="cursor: pointer" class="glyphicon glyphicon-remove"></span>
        </span>
        {% endif %}
      </div>

      <div class="clearfix"></div>

      <h3>List of items ({{pagination.total}})</h3>
      <div class="items row" id="assets-to-choose">
        {% for item in items %}
        <div class="col-xs-4 col-md-3 item" style="margin-bottom: 30px" data-media-url="{{ item.mediaURL }}" data-image="{{ item.image }}" data-type="{{ item.typo }}">
          <div>
            <div class="item-thumb-container">
              {% if item.typo %}

                {% if item.typo == 'image' %}
                  <i class="item-type glyphicon glyphicon-picture"></i>
                {% endif %}

                {% if item.typo == 'audio' %}
                  <i class="item-type glyphicon glyphicon-volume-up"></i>
                {% endif %}

                {% if item.typo == 'video' %}
                  <i class="item-type glyphicon glyphicon-facetime-video"></i>
                {% endif %}

              {% endif %}
              <span class="add-overlay">
                <span>+</span>
              </span>
              <img class="img-thumbnail" src="{% if item.image %}{{ item.image }}{% else %}{{ image }} {% endif %}" alt="{{ item.name }}">
            </div>
            <p class="hidden-xs">
              <a href="{% if item.permalink %}/item/{{ item.permalink }}{% else %}/id/{{ item.id }}{% endif %}?s={{ query }}" class="">{{ item.name }}</a>
            </p>
          </div>
        </div>
        {% endfor %}
      </div>

      <div class="clearfix"></div>

      {% include "general/pagination.html.twig" ignore missing %}
    </div>
  </div>
</div>
{% endblock %}

{% block before_head_end %}
<link rel="stylesheet" type="text/css" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.0/themes/start/jquery-ui.css" />
{% endblock %}
